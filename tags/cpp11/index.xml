<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cpp11 on </title>
    <link>/tags/cpp11/</link>
    <description>Recent content in cpp11 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 26 Jan 2021 13:15:42 +0530</lastBuildDate><atom:link href="/tags/cpp11/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Useful C&#43;&#43;11 features</title>
      <link>/posts/useful_cpp11_features/</link>
      <pubDate>Tue, 26 Jan 2021 13:15:42 +0530</pubDate>
      
      <guid>/posts/useful_cpp11_features/</guid>
      <description>The following are some features that added to the C++11 standard and are useful in programming.
 auto range based for loop lambda trailing return type decltype override final  auto At the compile-time type of variable is deduced from the initializer. There is no need to declare the type of variable.
In following example vector&amp;lt;int&amp;gt;::iterator is replaced with auto.
#include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;using namespace std; double add(int a, int b) { double c = a + b; return c; } int main() { vector&amp;lt;int&amp;gt; vec = {1, 2, 3, 4, 5}; auto a = 1; // type of a is int  auto b = 1.</description>
    </item>
    
  </channel>
</rss>
